/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'commons-cli:commons-cli:1.5.0'

    implementation 'org.neo4j.driver:neo4j-java-driver:5.2.0'
    
}

application {
    // Define the main class for the application.
    mainClass = 'nicx.App'
}

jar {
  manifest { 
    attributes "Main-Class": "nicx.App"
  }  
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//Added per https://docs.gradle.org/current/userguide/working_with_files.html#sec:creating_uber_jar_example
tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'

    manifest { 
        attributes "Main-Class": "nicx.App"
    } 

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
